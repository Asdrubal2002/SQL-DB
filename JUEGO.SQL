CREATE TABLE JUEGO(
ID_JUEGO    INT NOT NULL,
JUGADOR     VARCHAR2(50) NOT NULL,
NUMERO      INT NOT NULL,
INTENTOS    INT NOT NULL,
FINALIZADO	VARCHAR (5),
CONSTRAINT ID_JUEGO PRIMARY KEY(ID_JUEGO)
);

CREATE SEQUENCE SQ_ID_JUEGO MINVALUE 1 START WITH 1 INCREMENT BY 1 ORDER; 

CREATE OR REPLACE PROCEDURE SP_FINALIZAR_JUEGO(P_JUGADOR JUEGO.ID_JUEGO%TYPE)

AS
  V_FINALIZADO JUEGO.FINALIZADO%TYPE := 'S';

BEGIN


  UPDATE JUEGO
    SET FINALIZADO = V_FINALIZADO
      WHERE ID_JUEGO = P_JUGADOR;
      
      DBMS_OUTPUT.PUT_LINE('JUEGO FINALIZADO');

END;

CREATE OR REPLACE FUNCTION FN_OBTENER_NUMERO_SECRETO(P_JUGADOR JUEGO.ID_JUEGO%TYPE)

RETURN NUMBER

AS
  V_NUMERO NUMBER;
  
BEGIN
  SELECT NUMERO INTO V_NUMERO
    FROM JUEGO J
      WHERE J.ID_JUEGO = P_JUGADOR;
      
  RETURN V_NUMERO;
  
END;

CREATE OR REPLACE FUNCTION FN_INCREMENTAR_INTENTO (P_JUGADOR JUEGO.ID_JUEGO%TYPE)

RETURN NUMBER

AS
  V_INTENTOS NUMBER;
BEGIN
    SELECT INTENTOS INTO V_INTENTOS
      FROM JUEGO
        WHERE ID_JUEGO = P_JUGADOR;
        
        V_INTENTOS := V_INTENTOS + 1;
        
        UPDATE JUEGO
          SET INTENTOS = V_INTENTOS
            WHERE ID_JUEGO = P_JUGADOR;
            
    RETURN V_INTENTOS;

END;

CREATE OR REPLACE FUNCTION FN_OBTENER_JUEGO(P_JUGADOR VARCHAR)

RETURN JUEGO.ID_JUEGO%TYPE

AS
  V_JUEGO JUEGO.ID_JUEGO%TYPE;
  V_RANGO_MIN NUMBER := 1;
  V_RANGO_MAX NUMBER := 100;
  V_RANDOM NUMBER;

BEGIN

  SELECT J.ID_JUEGO INTO V_JUEGO
    FROM JUEGO J
      WHERE J.JUGADOR = P_JUGADOR AND J.FINALIZADO = 'N';
      
      RETURN V_JUEGO;
      
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    V_RANDOM := ROUND(SYS.dbms_random.VALUE(V_RANGO_MIN, V_RANGO_MAX));
    SELECT SQ_ID_JUEGO.NEXTVAL INTO V_JUEGO FROM DUAL;
    
    INSERT INTO JUEGO (ID_JUEGO, JUGADOR, NUMERO, INTENTOS, FINALIZADO) 
    VALUES (V_JUEGO, P_JUGADOR, V_RANDOM, 0, 'N');
  
    RETURN V_JUEGO;

END;



CREATE OR REPLACE PROCEDURE SP_JUGAR(P_JUGADOR JUEGO.JUGADOR%TYPE,
                                     P_NUMERO_INTENTO JUEGO.NUMERO%TYPE)                                   
AS
  V_JUEGO INT;
  V_NUMERO_SECRETO INT;
  V_INTENTOS INT;
BEGIN
  V_JUEGO := FN_OBTENER_JUEGO(P_JUGADOR);
  V_INTENTOS := FN_INCREMENTAR_INTENTO(V_JUEGO);
  V_NUMERO_SECRETO := FN_OBTENER_NUMERO_SECRETO(V_JUEGO);
  
  -- TERMINAR JUEGO
  IF (V_NUMERO_SECRETO = P_NUMERO_INTENTO) THEN
    SP_FINALIZAR_JUEGO(V_JUEGO);
    DBMS_OUTPUT.PUT_LINE('JUEGO: ' || V_JUEGO || CHR(13) ||
                         'NUMERO SECRETO: ' || V_NUMERO_SECRETO || CHR(13) ||
                         'INTENTOS: ' || V_INTENTOS);
  END IF;
  -- VALIDAR SI EL NUMERO ES MAYOR O MENOR
  IF (V_NUMERO_SECRETO > P_NUMERO_INTENTO) THEN
    DBMS_OUTPUT.PUT_LINE('El número ingresado (' || P_NUMERO_INTENTO || 
                         ') ' || 'es menor que el número secreto');
  ELSIF (V_NUMERO_SECRETO < P_NUMERO_INTENTO) THEN
    DBMS_OUTPUT.PUT_LINE('El número ingresado (' || P_NUMERO_INTENTO || ') ' ||
                         'es mayor que el número secreto');
  END IF;

END;

EXECUTE SP_JUGAR('HENRY',61);

